name: CI Pipeline for Mental Health Microservices

on:
  push:
    paths:
      - '**.py'
      - '**/requirements.txt'
      - '.github/workflows/ci.yml'
  pull_request:
    paths:
      - '**.py'
      - '**/requirements.txt'
      - '.github/workflows/ci.yml'

jobs:
  # ----------- MICROSERVICE TEST JOBS -----------
  user-service-test:
    name: User Service Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: user_service
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      - name: Run unit tests
        run: pytest

  mood-service-test:
    name: Mood Service Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: mood_service
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      - name: Run unit tests
        run: pytest

  journal-service-test:
    name: Journal Service Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: journal_service
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      - name: Run unit tests
        run: pytest

  recommendation-service-test:
    name: Recommendation Service Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: recommendation_service
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      - name: Run unit tests
        run: pytest

  notification-service-test:
    name: Notification Service Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: notification_service
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      - name: Run unit tests
        run: pytest

  # ----------- INTEGRATION TESTS JOB -----------
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs:
      - user-service-test
      - mood-service-test
      - journal-service-test
      - recommendation-service-test
      - notification-service-test

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version

      - name: Build and start all microservices with Docker Compose
        run: docker-compose up -d --build

      - name: Wait for services to start
        run: |
          sleep 15
          curl --fail http://localhost:8001 || exit 1
          curl --fail http://localhost:8002/health || exit 1
          curl --fail http://localhost:8003/health || exit 1
          curl --fail http://localhost:8004/health || exit 1
          curl --fail http://localhost:8005/health || exit 1

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies for integration tests
        run: |
          pip install pytest pytest-asyncio httpx

      - name: Run integration tests
        run: pytest integration_test/
